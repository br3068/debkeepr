% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsd-exchange.R
\name{deb_exchange_rate}
\alias{deb_exchange_rate}
\title{Exchange rate between pounds, shillings, and pence currencies}
\usage{
deb_exchange_rate(lsd1, lsd2, output = c("shillings", "pence", "pounds"),
  bases = c(20, 12), round = 5)
}
\arguments{
\item{lsd1, lsd2}{\code{lsd1} is the pounds, shillings, and pence value that is
reduced to £1 and against which \code{lsd2} is compared. Thus, \code{lsd1} is the
"fixed currency" and \code{lsd2} is the "variable currency". Objects of class
lsd or objects that can be coerced to class lsd: numeric vectors of length
3 or lists of such vectors.}

\item{output}{Choice of either \code{"shillings"}, \code{"pence"}, or \code{"pounds"} for
the format in which the exchange rate will be returned. \code{"shillings"},
the default, returns the exchange rate in terms of shillings and pence.
\code{"pence"} returns the exchange rate in terms of pence. \code{"pounds"} returns
the exchange rate in terms of pounds, shillings, and pence.}
}
\value{
Returns an object of class lsd with a bases attribute. The format
of the returned value is determined by the \code{output} argument. If \code{lsd1} >
\code{lsd2}, the returned value will be less than £1.
}
\description{
Calculate the exchange rate between two sets of values in the form of
pounds, shillings, and pence. The rate is returned in the form of either
pounds, shillings, and pence; shillings and pence; or just pence. \code{lsd1}
and \code{lsd2} must have the same bases for the shillings and pence units.
}
\details{
If \code{lsd1} and \code{lsd2} are lists of different lengths or one is a vector,
the shorter list will be recycled.
}
\examples{
# Find the exchange rate if £166 13s. 4d. in one currency is
# equivalent to £100 0s. 0d, in another currency in terms of shillings
deb_exchange_rate(lsd1 = c(166, 13, 4), lsd2 = c(100, 0, 0))

# Exchange rate for the opposite direction
deb_exchange_rate(lsd1 = c(100, 0, 0), lsd2 = c(166, 13, 4))

# Exchange rate in terms of pence
deb_exchange_rate(lsd1 = c(125, 0, 0),
                  lsd2 = c(46, 17, 6),
                  output = "pence")

# Exchange rate in terms of pounds, shillings, and pence
deb_exchange_rate(lsd1 = c(100, 0, 0),
                  lsd2 = c(166, 13, 4),
                  output = "pounds")

# To find decimalized ratio between currencies use
# deb_exchange_rate() with deb_lsd_l()
deb_exchange_rate(lsd1 = c(100, 0, 0), lsd2 = c(166, 13, 4)) \%>\%
  deb_lsd_l()

# Exchange rate between currencies that use the same alternative bases
deb_exchange_rate(lsd1 = c(100, 0, 0),
                  lsd2 = c(166, 13, 4),
                  bases = c(20, 16))

# Exchange for an object of class lsd will use the bases attribute
lsd_100 <- deb_as_lsd(lsd = c(100, 0, 0), bases = c(20, 16))
deb_exchange_rate(lsd1 = lsd_100, lsd2 = c(166, 13, 4))

# If lsd1 and lsd2 have different bases, the function will throw an error
lsd_166 <- deb_as_lsd(lsd = c(166, 13, 4), bases = c(20, 12))
\dontrun{
deb_exchange_rate(lsd1 = lsd_100, lsd2 = lsd_166)
}

# To find the exchange rate for multiple currencies use a
# list of lsd values or lsd objects for `lsd1` or `lsd2`
list_a <- list(c(150, 0, 0), c(125, 0, 0), c(175, 13, 4))
list_b <- list(c(125, 0, 0), c(75, 8, 4), c(100, 10, 0))

deb_exchange_rate(lsd1 = list_a, lsd2 = list_b)

# Or find the exchange rate of multiple currencies to a
# single currency by using a vector for `lsd2`
deb_exchange_rate(lsd1 = list_a, lsd2 = lsd_166)

}
